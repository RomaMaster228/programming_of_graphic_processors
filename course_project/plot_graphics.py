import matplotlib.pyplot as plt


def make_triangular(figures):
    triangular_figures = []
    for i in range(2, len(figures), 3):
        triangular_figures.append(figures[i - 2])
        triangular_figures.append(figures[i - 1])
        triangular_figures.append(figures[i])
        triangular_figures.append(figures[i - 2])
    return triangular_figures


fig = plt.figure(figsize=(10, 10))
ax_3d = fig.add_subplot(projection='3d')

floor = [[-5.000000, -5.000000, -1.000000], [-5.000000, 5.000000, -1.000000], [5.000000, 5.000000, -1.000000], [-5.000000, -5.000000, -1.000000], [5.000000, 5.000000, -1.000000], [5.000000, -5.000000, -1.000000], ]
tetr = [[2.133975, 0.000000, 0.100000], [3.000000, 3.000000, 0.100000], [3.866025, 0.000000, 0.100000], [2.133975, 0.000000, 0.100000], [3.000000, 3.000000, 0.100000], [3.000000, 2.000000, 1.600000], [2.133975, 0.000000, 0.100000], [3.866025, 0.000000, 0.100000], [3.000000, 2.000000, 1.600000], [3.000000, 3.000000, 0.100000], [3.866025, 0.000000, 0.100000], [3.000000, 2.000000, 1.600000], ]
cube = [[-1.010363, -1.010363, -1.010363], [-1.010363, 1.010363, -1.010363], [1.010363, 1.010363, -1.010363], [1.010363, 1.010363, -1.010363], [1.010363, -1.010363, -1.010363], [-1.010363, -1.010363, -1.010363], [1.010363, 1.010363, 1.010363], [1.010363, -1.010363, 1.010363], [1.010363, -1.010363, -1.010363], [1.010363, -1.010363, -1.010363], [1.010363, 1.010363, -1.010363], [1.010363, 1.010363, 1.010363], [1.010363, 1.010363, -1.010363], [-1.010363, 1.010363, -1.010363], [-1.010363, 1.010363, 1.010363], [-1.010363, 1.010363, 1.010363], [1.010363, 1.010363, 1.010363], [1.010363, 1.010363, -1.010363], [-1.010363, -1.010363, 1.010363], [-1.010363, 1.010363, 1.010363], [-1.010363, 1.010363, -1.010363], [-1.010363, 1.010363, -1.010363], [-1.010363, -1.010363, -1.010363], [-1.010363, -1.010363, 1.010363], [1.010363, -1.010363, -1.010363], [1.010363, -1.010363, 1.010363], [-1.010363, -1.010363, 1.010363], [-1.010363, -1.010363, 1.010363], [-1.010363, -1.010363, -1.010363], [1.010363, -1.010363, -1.010363], [1.010363, 1.010363, 1.010363], [-1.010363, 1.010363, 1.010363], [-1.010363, -1.010363, 1.010363], [-1.010363, -1.010363, 1.010363], [1.010363, -1.010363, 1.010363], [1.010363, 1.010363, 1.010363], ]
dod = [[-2.133975, -2.866025, 0.866025], [-3.535233, -2.000000, 1.401259], [-3.000000, -3.401259, 0.535233], [-3.535233, -2.000000, 1.401259], [-3.866025, -2.866025, 0.866025], [-3.000000, -3.401259, 0.535233], [-3.535233, -2.000000, 1.401259], [-2.133975, -2.866025, 0.866025], [-2.464767, -2.000000, 1.401259], [-3.535233, -2.000000, 1.401259], [-2.133975, -1.133975, 0.866025], [-3.000000, -0.598741, 0.535233], [-3.866025, -1.133975, 0.866025], [-3.535233, -2.000000, 1.401259], [-3.000000, -0.598741, 0.535233], [-3.535233, -2.000000, 1.401259], [-2.464767, -2.000000, 1.401259], [-2.133975, -1.133975, 0.866025], [-1.598741, -1.464767, 0.000000], [-2.464767, -2.000000, 1.401259], [-1.598741, -2.535233, 0.000000], [-2.133975, -1.133975, 0.866025], [-2.464767, -2.000000, 1.401259], [-1.598741, -1.464767, 0.000000], [-2.464767, -2.000000, 1.401259], [-2.133975, -2.866025, 0.866025], [-1.598741, -2.535233, 0.000000], [-3.866025, -2.866025, 0.866025], [-3.535233, -2.000000, 1.401259], [-4.401259, -2.535233, 0.000000], [-3.535233, -2.000000, 1.401259], [-3.866025, -1.133975, 0.866025], [-4.401259, -1.464767, 0.000000], [-4.401259, -2.535233, 0.000000], [-3.535233, -2.000000, 1.401259], [-4.401259, -1.464767, 0.000000], [-3.866025, -2.866025, 0.866025], [-4.401259, -2.535233, 0.000000], [-3.866025, -2.866025, -0.866025], [-3.000000, -3.401259, 0.535233], [-3.866025, -2.866025, 0.866025], [-3.000000, -3.401259, -0.535233], [-3.000000, -3.401259, -0.535233], [-3.866025, -2.866025, 0.866025], [-3.866025, -2.866025, -0.866025], [-2.133975, -2.866025, 0.866025], [-3.000000, -3.401259, -0.535233], [-2.133975, -2.866025, -0.866025], [-2.133975, -2.866025, 0.866025], [-3.000000, -3.401259, 0.535233], [-3.000000, -3.401259, -0.535233], [-1.598741, -2.535233, 0.000000], [-2.133975, -2.866025, 0.866025], [-2.133975, -2.866025, -0.866025], [-3.866025, -1.133975, 0.866025], [-3.000000, -0.598741, -0.535233], [-3.866025, -1.133975, -0.866025], [-3.866025, -1.133975, 0.866025], [-3.000000, -0.598741, 0.535233], [-3.000000, -0.598741, -0.535233], [-4.401259, -1.464767, 0.000000], [-3.866025, -1.133975, 0.866025], [-3.866025, -1.133975, -0.866025], [-3.000000, -0.598741, -0.535233], [-2.133975, -1.133975, 0.866025], [-2.133975, -1.133975, -0.866025], [-3.000000, -0.598741, 0.535233], [-2.133975, -1.133975, 0.866025], [-3.000000, -0.598741, -0.535233], [-2.133975, -1.133975, 0.866025], [-1.598741, -1.464767, 0.000000], [-2.133975, -1.133975, -0.866025], [-4.401259, -2.535233, 0.000000], [-3.866025, -1.133975, -0.866025], [-3.535233, -2.000000, -1.401259], [-3.866025, -2.866025, -0.866025], [-4.401259, -2.535233, 0.000000], [-3.535233, -2.000000, -1.401259], [-4.401259, -2.535233, 0.000000], [-4.401259, -1.464767, 0.000000], [-3.866025, -1.133975, -0.866025], [-2.133975, -1.133975, -0.866025], [-1.598741, -2.535233, 0.000000], [-2.464767, -2.000000, -1.401259], [-1.598741, -2.535233, 0.000000], [-2.133975, -2.866025, -0.866025], [-2.464767, -2.000000, -1.401259], [-1.598741, -1.464767, 0.000000], [-1.598741, -2.535233, 0.000000], [-2.133975, -1.133975, -0.866025], [-3.000000, -3.401259, -0.535233], [-3.535233, -2.000000, -1.401259], [-2.464767, -2.000000, -1.401259], [-2.133975, -2.866025, -0.866025], [-3.000000, -3.401259, -0.535233], [-2.464767, -2.000000, -1.401259], [-3.000000, -3.401259, -0.535233], [-3.866025, -2.866025, -0.866025], [-3.535233, -2.000000, -1.401259], [-3.535233, -2.000000, -1.401259], [-3.000000, -0.598741, -0.535233], [-2.464767, -2.000000, -1.401259], [-3.866025, -1.133975, -0.866025], [-3.000000, -0.598741, -0.535233], [-3.535233, -2.000000, -1.401259], [-3.000000, -0.598741, -0.535233], [-2.133975, -1.133975, -0.866025], [-2.464767, -2.000000, -1.401259], ]
camera = [[7.000000, 0.000000, 3.000000], [2.000000, 0.000000, 0.000000], [7.199177, 0.377293, 3.309017], [2.023391, 0.106041, 0.020791], [7.375199, 0.775165, 3.587785], [2.041022, 0.214520, 0.040674], [7.524243, 1.191723, 3.809017], [2.052631, 0.325105, 0.058779], [7.642730, 1.624512, 3.951057], [2.057979, 0.437437, 0.074314], [7.727407, 2.070552, 4.000000], [2.056852, 0.551132, 0.086603], [7.775430, 2.526390, 3.951057], [2.049059, 0.665780, 0.095106], [7.784437, 2.988166, 3.809017], [2.034444, 0.780950, 0.099452], [7.752611, 3.451685, 3.587785], [2.012877, 0.896191, 0.099452], [7.678725, 3.912506, 3.309017], [1.984267, 1.011035, 0.095106], [7.562178, 4.366025, 3.000000], [1.948557, 1.125000, 0.086603], [7.403021, 4.807578, 2.690983], [1.905728, 1.237594, 0.074314], [7.201961, 5.232531, 2.412215], [1.855798, 1.348316, 0.058779], [6.960349, 5.636379, 2.190983], [1.798829, 1.456663, 0.040674], [6.680161, 6.014844, 2.048943], [1.734920, 1.562129, 0.020791], [6.363961, 6.363961, 2.000000], [1.664214, 1.664214, 0.000000], [6.014844, 6.680161, 2.048943], [1.586892, 1.762422, -0.020791], [5.636379, 6.960349, 2.190983], [1.503178, 1.856270, -0.040674], [5.232531, 7.201961, 2.412215], [1.413335, 1.945288, -0.058779], [4.807578, 7.403021, 2.690983], [1.317664, 2.029025, -0.074314], [4.366025, 7.562178, 3.000000], [1.216506, 2.107051, -0.086603], [3.912506, 7.678725, 3.309017], [1.110235, 2.178959, -0.095106], [3.451685, 7.752611, 3.587785], [0.999259, 2.244374, -0.099452], [2.988166, 7.784437, 3.809017], [0.884019, 2.302947, -0.099452], [2.526390, 7.775430, 3.951057], [0.764980, 2.354367, -0.095106], [2.070552, 7.727407, 4.000000], [0.642638, 2.398358, -0.086603], [1.624512, 7.642730, 3.951057], [0.517508, 2.434682, -0.074314], [1.191723, 7.524243, 3.809017], [0.390123, 2.463141, -0.058779], [0.775165, 7.375199, 3.587785], [0.261035, 2.483581, -0.040674], [0.377293, 7.199177, 3.309017], [0.130804, 2.495890, -0.020791], [0.000000, 7.000000, 3.000000], [0.000000, 2.500000, -0.000000], [-0.355410, 6.781636, 2.690983], [-0.130804, 2.495890, 0.020791], [-0.688234, 6.548108, 2.412215], [-0.261035, 2.483581, 0.040674], [-0.998359, 6.303393, 2.190983], [-0.390123, 2.463141, 0.058779], [-1.286251, 6.051336, 2.048943], [-0.517508, 2.434682, 0.074314], [-1.552914, 5.795555, 2.000000], [-0.642638, 2.398358, 0.086603], [-1.799848, 5.539362, 2.048943], [-0.764980, 2.354367, 0.095106], [-2.028986, 5.285689, 2.190983], [-0.884019, 2.302947, 0.099452], [-2.242628, 5.037025, 2.412215], [-0.999259, 2.244374, 0.099452], [-2.443361, 4.795367, 2.690983], [-1.110235, 2.178959, 0.095106], [-2.633975, 4.562178, 3.000000], [-1.216506, 2.107051, 0.086603], [-2.817368, 4.338367, 3.309017], [-1.317664, 2.029025, 0.074314], [-2.996463, 4.124277, 3.587785], [-1.413335, 1.945288, 0.058779], [-3.174106, 3.919695, 3.809017], [-1.503178, 1.856270, 0.040674], [-3.352984, 3.723866, 3.951057], [-1.586892, 1.762422, 0.020791], [-3.535534, 3.535534, 4.000000], [-1.664214, 1.664214, 0.000000], [-3.723866, 3.352984, 3.951057], [-1.734920, 1.562129, -0.020791], [-3.919695, 3.174106, 3.809017], [-1.798829, 1.456663, -0.040674], [-4.124277, 2.996463, 3.587785], [-1.855798, 1.348316, -0.058779], [-4.338367, 2.817368, 3.309017], [-1.905728, 1.237594, -0.074314], [-4.562178, 2.633975, 3.000000], [-1.948557, 1.125000, -0.086603], [-4.795367, 2.443361, 2.690983], [-1.984267, 1.011035, -0.095106], [-5.037025, 2.242628, 2.412215], [-2.012877, 0.896191, -0.099452], [-5.285689, 2.028986, 2.190983], [-2.034444, 0.780950, -0.099452], [-5.539362, 1.799848, 2.048943], [-2.049059, 0.665780, -0.095106], [-5.795555, 1.552914, 2.000000], [-2.056852, 0.551132, -0.086603], [-6.051336, 1.286251, 2.048943], [-2.057979, 0.437437, -0.074314], [-6.303393, 0.998359, 2.190983], [-2.052631, 0.325105, -0.058779], [-6.548108, 0.688234, 2.412215], [-2.041022, 0.214520, -0.040674], [-6.781636, 0.355410, 2.690983], [-2.023391, 0.106041, -0.020791], [-7.000000, 0.000000, 3.000000], [-2.000000, 0.000000, -0.000000], [-7.199177, -0.377293, 3.309017], [-1.971127, -0.103302, 0.020791], [-7.375199, -0.775165, 3.587785], [-1.937066, -0.203594, 0.040674], [-7.524243, -1.191723, 3.809017], [-1.898122, -0.300633, 0.058779], [-7.642730, -1.624512, 3.951057], [-1.854611, -0.394210, 0.074314], [-7.727407, -2.070552, 4.000000], [-1.806852, -0.484144, 0.086603], [-7.775430, -2.526390, 3.951057], [-1.755167, -0.570288, 0.095106], [-7.784437, -2.988166, 3.809017], [-1.699878, -0.652522, 0.099452], [-7.752611, -3.451685, 3.587785], [-1.641305, -0.730756, 0.099452], [-7.678725, -3.912506, 3.309017], [-1.579759, -0.804927, 0.095106], [-7.562178, -4.366025, 3.000000], [-1.515544, -0.875000, 0.086603], [-7.403021, -4.807578, 2.690983], [-1.448955, -0.940962, 0.074314], [-7.201961, -5.232531, 2.412215], [-1.380270, -1.002825, 0.058779], [-6.960349, -5.636379, 2.190983], [-1.309755, -1.060619, 0.040674], [-6.680161, -6.014844, 2.048943], [-1.237659, -1.114393, 0.020791], [-6.363961, -6.363961, 2.000000], [-1.164214, -1.164214, 0.000000], [-6.014844, -6.680161, 2.048943], [-1.089631, -1.210158, -0.020791], [-5.636379, -6.960349, 2.190983], [-1.014104, -1.252314, -0.040674], [-5.232531, -7.201961, 2.412215], [-0.937806, -1.290780, -0.058779], [-4.807578, -7.403021, 2.690983], [-0.860892, -1.325657, -0.074314], [-4.366025, -7.562178, 3.000000], [-0.783494, -1.357051, -0.086603], [-3.912506, -7.678725, 3.309017], [-0.705727, -1.385067, -0.095106], [-3.451685, -7.752611, 3.587785], [-0.627687, -1.409808, -0.099452], [-2.988166, -7.784437, 3.809017], [-0.549453, -1.431375, -0.099452], [-2.526390, -7.775430, 3.951057], [-0.471088, -1.449859, -0.095106], [-2.070552, -7.727407, 4.000000], [-0.392638, -1.465345, -0.086603], [-1.624512, -7.642730, 3.951057], [-0.314139, -1.477909, -0.074314], [-1.191723, -7.524243, 3.809017], [-0.235615, -1.487613, -0.058779], [-0.775165, -7.375199, 3.587785], [-0.157079, -1.494507, -0.040674], [-0.377293, -7.199177, 3.309017], [-0.078540, -1.498629, -0.020791], [-0.000000, -7.000000, 3.000000], [-0.000000, -1.500000, -0.000000], [0.355410, -6.781636, 2.690983], [0.078540, -1.498629, 0.020791], [0.688234, -6.548108, 2.412215], [0.157079, -1.494507, 0.040674], [0.998359, -6.303393, 2.190983], [0.235615, -1.487613, 0.058779], [1.286251, -6.051336, 2.048943], [0.314139, -1.477909, 0.074314], [1.552914, -5.795555, 2.000000], [0.392638, -1.465345, 0.086603], [1.799848, -5.539362, 2.048943], [0.471088, -1.449859, 0.095106], [2.028986, -5.285689, 2.190983], [0.549453, -1.431375, 0.099452], [2.242628, -5.037025, 2.412215], [0.627687, -1.409808, 0.099452], [2.443361, -4.795367, 2.690983], [0.705727, -1.385067, 0.095106], [2.633975, -4.562178, 3.000000], [0.783494, -1.357051, 0.086603], [2.817368, -4.338367, 3.309017], [0.860892, -1.325657, 0.074314], [2.996463, -4.124277, 3.587785], [0.937806, -1.290780, 0.058779], [3.174106, -3.919695, 3.809017], [1.014104, -1.252314, 0.040674], [3.352984, -3.723866, 3.951057], [1.089631, -1.210158, 0.020791], [3.535534, -3.535534, 4.000000], [1.164214, -1.164214, 0.000000], [3.723866, -3.352984, 3.951057], [1.237659, -1.114393, -0.020791], [3.919695, -3.174106, 3.809017], [1.309755, -1.060619, -0.040674], [4.124277, -2.996463, 3.587785], [1.380270, -1.002825, -0.058779], [4.338367, -2.817368, 3.309017], [1.448955, -0.940962, -0.074314], [4.562178, -2.633975, 3.000000], [1.515544, -0.875000, -0.086603], [4.795367, -2.443361, 2.690983], [1.579759, -0.804927, -0.095106], [5.037025, -2.242628, 2.412215], [1.641305, -0.730756, -0.099452], [5.285689, -2.028986, 2.190983], [1.699878, -0.652522, -0.099452], [5.539362, -1.799848, 2.048943], [1.755167, -0.570288, -0.095106], [5.795555, -1.552914, 2.000000], [1.806852, -0.484144, -0.086603], [6.051336, -1.286251, 2.048943], [1.854611, -0.394210, -0.074314], [6.303393, -0.998359, 2.190983], [1.898122, -0.300633, -0.058779], [6.548108, -0.688234, 2.412215], [1.937066, -0.203594, -0.040674], [6.781636, -0.355410, 2.690983], [1.971127, -0.103302, -0.020791], ]

tr_floor = make_triangular(floor)
tr_tetr = make_triangular(tetr)
tr_cube = make_triangular(cube)
tr_dod = make_triangular(dod)

a = []
b = []
for i in range(len(camera)):
    if i % 2 == 0:
        a.append(camera[i])
    else:
        b.append(camera[i])

ax_3d.plot([v[0] for v in tr_floor], [v[1] for v in tr_floor], [v[2] for v in tr_floor])
ax_3d.plot([v[0] for v in tr_tetr], [v[1] for v in tr_tetr], [v[2] for v in tr_tetr], color="r")
ax_3d.plot([v[0] for v in tr_cube], [v[1] for v in tr_cube], [v[2] for v in tr_cube], color="r")
ax_3d.plot([v[0] for v in tr_dod], [v[1] for v in tr_dod], [v[2] for v in tr_dod], color="r")
ax_3d.plot([v[0] for v in camera], [v[1] for v in camera], [v[2] for v in camera], color="g")
ax_3d.plot([v[0] for v in a], [v[1] for v in a], [v[2] for v in a], color="y")

plt.tight_layout()
plt.show()